name: CI

on:
  push: { branches: [ main ] }
  pull_request: { branches: [ main ] }
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: "3.12", cache: "pip" }
      - run: python -m pip install -U pip ruff
      - run: ruff check .
      - run: ruff format --check .

  typecheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: "3.12", cache: "pip" }
      - run: |
          python -m pip install -U pip
          pip install mypy types-setuptools
          pip install -e ".[dev]" || pip install .
      - run: mypy --version
      - run: mypy src

  test:
    name: Tests (py${{ matrix.py }} â€¢ ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        py: ["3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.py }}
          cache: "pip"
          cache-dependency-path: pyproject.toml
      - name: Install
        run: |
          python -m pip install -U pip
          pip install -e ".[dev]" || pip install .
          pip install pytest pytest-cov
      - name: Run fast tests (warnings->errors)
        env:
          PYTHONWARNINGS: error
        run: |
          pytest -q -m "not slow" --cov=worldsim_core --cov-report=xml
      - name: Upload coverage (optional)
        if: ${{ env.CODECOV_TOKEN != '' }}
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          fail_ci_if_error: false

  build:
    name: Build sdist+wheel
    needs: [lint, typecheck, test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: "3.12", cache: "pip" }
      - run: python -m pip install -U pip build
      - run: python -m build
      - uses: actions/upload-artifact@v4
        with: { name: dist, path: dist/* }
